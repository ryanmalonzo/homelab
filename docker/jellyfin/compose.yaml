name: jellyfin

x-common-variables: &common-variables
  PUID: ${PUID:-1000}
  PGID: ${PGID:-1001}
  TZ: ${TZ}

x-restart-policy: &restart-policy
  restart: unless-stopped

x-linuxserver-base: &linuxserver-base
  <<: *restart-policy
  environment:
    <<: *common-variables

x-radarr-base: &radarr-base
  <<: *linuxserver-base
  image: lscr.io/linuxserver/radarr:5.28.0

x-sonarr-base: &sonarr-base
  <<: *linuxserver-base
  image: lscr.io/linuxserver/sonarr:4.0.15

x-profilarr-base: &profilarr-base
  <<: *restart-policy
  image: santiagosayshey/profilarr:v1.1.3
  environment:
    TZ: ${TZ}

services:
  jellyfin:
    <<: *restart-policy
    image: ghcr.io/jellyfin/jellyfin:10.11.1
    container_name: jellyfin
    user: ${PUID}:${PGID}
    group_add:
      - ${RENDER_GROUP_ID}
    ports:
      - "7359:7359/udp"
      - "8096:8096"
    volumes:
      - jellyfin-cache:/cache
      - jellyfin-config:/config
      - ${NFS_MEDIA}/anime/tv:/data/anime/tv
      - ${NFS_MEDIA}/anime/movies:/data/anime/movies
      - ${NFS_MEDIA}/non-anime/tv:/data/non-anime/tv
      - ${NFS_MEDIA}/non-anime/movies:/data/non-anime/movies
    environment:
      - JELLYFIN_PublishedServerUrl=https://jellyfin.ryanmalonzo.com
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    labels:
      pangolin.proxy-resources.jellyfin.name: Jellyfin
      pangolin.proxy-resources.jellyfin.protocol: http
      pangolin.proxy-resources.jellyfin.full-domain: jellyfin.ryanmalonzo.com
      pangolin.proxy-resources.jellyfin.auth.sso-enabled: false
      pangolin.proxy-resources.jellyfin.targets[0].hostname: 192.168.1.253
      pangolin.proxy-resources.jellyfin.targets[0].port: 8096
      pangolin.proxy-resources.jellyfin.targets[0].method: http
      pangolin.proxy-resources.jellyfin.rules[0].match: path
      pangolin.proxy-resources.jellyfin.rules[0].value: /health
      pangolin.proxy-resources.jellyfin.rules[0].action: allow

  jellyseerr:
    <<: *restart-policy
    image: ghcr.io/fallenbagel/jellyseerr:2.7.3
    container_name: jellyseerr
    ports:
      - "5055:5055"
    volumes:
      - jellyseerr:/app/config
    environment:
      LOG_LEVEL: debug
      PORT: 5055
      TZ: ${TZ}
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5055/api/v1/status || exit 1
      start_period: 20s
      timeout: 3s
      interval: 15s
      retries: 3
    labels:
      pangolin.proxy-resources.jellyseerr.name: Jellyseerr
      pangolin.proxy-resources.jellyseerr.protocol: http
      pangolin.proxy-resources.jellyseerr.full-domain: jellyseerr.ryanmalonzo.com
      pangolin.proxy-resources.jellyseerr.auth.sso-enabled: false
      pangolin.proxy-resources.jellyseerr.targets[0].hostname: 192.168.1.253
      pangolin.proxy-resources.jellyseerr.targets[0].method: http
      pangolin.proxy-resources.jellyseerr.rules[0].match: path
      pangolin.proxy-resources.jellyseerr.rules[0].value: /api/v1/status
      pangolin.proxy-resources.jellyseerr.rules[0].action: allow

  prowlarr:
    <<: *linuxserver-base
    image: lscr.io/linuxserver/prowlarr:2.1.5
    container_name: prowlarr
    network_mode: service:tailscale-prowlarr
    depends_on:
      - tailscale-prowlarr
    volumes:
      - prowlarr:/config

  tailscale-prowlarr:
    image: ghcr.io/tailscale/tailscale:v1.88.4
    container_name: tailscale-prowlarr
    hostname: prowlarr
    volumes:
      - tailscale-prowlarr:/var/lib/tailscale
      - ./tailscale/prowlarr.json:/tailscale/prowlarr.json
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_SERVE_CONFIG=/tailscale/prowlarr.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  sabnzbd:
    <<: *linuxserver-base
    image: lscr.io/linuxserver/sabnzbd:4.5.5
    container_name: sabnzbd
    network_mode: service:tailscale-sabnzbd
    depends_on:
      - tailscale-sabnzbd
    volumes:
      - sabnzbd:/config
      - ${INCOMPLETE_DOWNLOADS_DIR}:/incomplete-downloads
      - ${DOWNLOADS_DIR}:/downloads

  tailscale-sabnzbd:
    image: ghcr.io/tailscale/tailscale:v1.88.4
    container_name: tailscale-sabnzbd
    hostname: sabnzbd
    volumes:
      - tailscale-sabnzbd:/var/lib/tailscale
      - ./tailscale/sabnzbd.json:/tailscale/sabnzbd.json
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_SERVE_CONFIG=/tailscale/sabnzbd.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  radarr:
    <<: *radarr-base
    container_name: radarr
    network_mode: service:tailscale-radarr
    depends_on:
      - tailscale-radarr
    volumes:
      - radarr:/config
      - ${NFS_MEDIA}/anime/movies:/movies
      - ${DOWNLOADS_DIR}:/downloads

  tailscale-radarr:
    image: ghcr.io/tailscale/tailscale:v1.88.4
    container_name: tailscale-radarr
    hostname: radarr
    volumes:
      - tailscale-radarr:/var/lib/tailscale
      - ./tailscale/radarr.json:/tailscale/radarr.json
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_SERVE_CONFIG=/tailscale/radarr.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  sonarr:
    <<: *sonarr-base
    container_name: sonarr
    network_mode: service:tailscale-sonarr
    depends_on:
      - tailscale-sonarr
    volumes:
      - sonarr:/config
      - ${NFS_MEDIA}/anime/tv:/tv
      - ${DOWNLOADS_DIR}:/downloads

  tailscale-sonarr:
    image: ghcr.io/tailscale/tailscale:v1.88.4
    container_name: tailscale-sonarr
    hostname: sonarr
    volumes:
      - tailscale-sonarr:/var/lib/tailscale
      - ./tailscale/sonarr.json:/tailscale/sonarr.json
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_SERVE_CONFIG=/tailscale/sonarr.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  profilarr:
    <<: *profilarr-base
    container_name: profilarr
    network_mode: service:tailscale-profilarr
    depends_on:
      - tailscale-profilarr
    volumes:
      - profilarr:/config

  tailscale-profilarr:
    image: ghcr.io/tailscale/tailscale:v1.88.4
    container_name: tailscale-profilarr
    hostname: profilarr
    volumes:
      - tailscale-profilarr:/var/lib/tailscale
      - ./tailscale/profilarr.json:/tailscale/profilarr.json
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_SERVE_CONFIG=/tailscale/profilarr.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  radarr-nonanime:
    <<: *radarr-base
    container_name: radarr-nonanime
    network_mode: service:tailscale-radarr-nonanime
    depends_on:
      - tailscale-radarr-nonanime
    volumes:
      - radarr-nonanime:/config
      - ${NFS_MEDIA}/non-anime/movies:/movies
      - ${DOWNLOADS_DIR}:/downloads

  tailscale-radarr-nonanime:
    image: ghcr.io/tailscale/tailscale:v1.88.4
    container_name: tailscale-radarr-nonanime
    hostname: radarr-nonanime
    volumes:
      - tailscale-radarr-nonanime:/var/lib/tailscale
      - ./tailscale/radarr.json:/tailscale/radarr.json
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_SERVE_CONFIG=/tailscale/radarr.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  sonarr-nonanime:
    <<: *sonarr-base
    container_name: sonarr-nonanime
    network_mode: service:tailscale-sonarr-nonanime
    depends_on:
      - tailscale-sonarr-nonanime
    volumes:
      - sonarr-nonanime:/config
      - ${NFS_MEDIA}/non-anime/tv:/tv
      - ${DOWNLOADS_DIR}:/downloads

  tailscale-sonarr-nonanime:
    image: ghcr.io/tailscale/tailscale:v1.88.4
    container_name: tailscale-sonarr-nonanime
    hostname: sonarr-nonanime
    volumes:
      - tailscale-sonarr-nonanime:/var/lib/tailscale
      - ./tailscale/sonarr.json:/tailscale/sonarr.json
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_SERVE_CONFIG=/tailscale/sonarr.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  profilarr-nonanime:
    <<: *profilarr-base
    container_name: profilarr-nonanime
    network_mode: service:tailscale-profilarr-nonanime
    depends_on:
      - tailscale-profilarr-nonanime
    volumes:
      - profilarr-nonanime:/config

  tailscale-profilarr-nonanime:
    image: ghcr.io/tailscale/tailscale:v1.88.4
    container_name: tailscale-profilarr-nonanime
    hostname: profilarr-nonanime
    volumes:
      - tailscale-profilarr-nonanime:/var/lib/tailscale
      - ./tailscale/profilarr.json:/tailscale/profilarr.json
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_SERVE_CONFIG=/tailscale/profilarr.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

volumes:
  jellyfin-cache:
  jellyfin-config:
  jellyseerr:
  profilarr:
  profilarr-nonanime:
  prowlarr:
  radarr:
  radarr-nonanime:
  sabnzbd:
  sonarr:
  sonarr-nonanime:
  tailscale-profilarr:
  tailscale-profilarr-nonanime:
  tailscale-prowlarr:
  tailscale-radarr:
  tailscale-radarr-nonanime:
  tailscale-sabnzbd:
  tailscale-sonarr:
  tailscale-sonarr-nonanime:
